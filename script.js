let greyscale = false;
let prev_binary_length = document.getElementById('binary').value.length;
refreshUI();

function increment() {
    document.getElementById('lineLength').value++;
}

function decrement() {
    document.getElementById('lineLength').value--;
}

function refreshUI() {
    updateBinaryDetails();
    generateGrids();
}

function updateBinaryDetails() {
    greyscale = document.getElementById('greyscale').checked;
    let binary = document.getElementById('binary').value;
    let length = binary.length;
    document.getElementById('binaryLength').innerHTML = length;
    let primeFactors = getPrimeFactors(length);
    document.getElementById('primeFactors').innerHTML = primeFactors.map(p => `<span class="clickable" onclick="setLineLength(${p}); refreshUI()">${p}</span>`).join(", ");

    // if length is updating, and line length value isnt set, then choose the first prime as the default number for line length
    if (prev_binary_length !== length && document.getElementById('lineLength').value.length === 0) {
        setLineLength(primeFactors[0]);
    }

    // update to be current length
    prev_binary_length = length;
}

function autofill1974() {
    document.getElementById('binary').value
    refreshUI();
}

function autofill2001() {
    document.getElementById('binary').value
    refreshUI();
}

function setLineLength(value) {
    document.getElementById('lineLength').value = value;
}

function getPrimeFactors(n) {
    let factors = [];
    for (let i = 2; i <= n; i++) {
        while ((n % i) === 0) {
            factors.push(i);
            n /= i;
        }
    }
    return factors;
}

function generateGrids() {
    let binary = document.getElementById('binary').value;
    let lineLength = document.getElementById('lineLength').value;
    if (lineLength > 0) {
        generateGrid(binary, lineLength, 'grid');
        generateGrid(reverseEachLine(binary, lineLength), lineLength, 'reverseGrid');
    } else {
        clearGrids();
    }
}

function clearGrids() {
    document.getElementById('grid').innerHTML = "";
    document.getElementById('reverseGrid').innerHTML = "";
}

function reverseEachLine(binary, lineLength) {
    let lines = [];
    while(binary.length) {
        let line = binary.slice(0, lineLength);
        binary = binary.slice(lineLength);
        lines.push(line.split("").reverse().join(""));
    }
    return lines.join("");
}

function generateGrid(binary, lineLength, elementId) {
    let grid = document.getElementById(elementId);
    grid.innerHTML = "";
    for(let i = 0; i < binary.length; i++) {
        let pixel = document.createElement("div");
        pixel.classList.add("pixel");
        let value = binary[i];
        if(greyscale) {
            let grey = Math.floor(255 - (Number(value) * 28.3));
            pixel.style.backgroundColor = `rgb(${grey},${grey},${grey})`;
        } else {
            if(value === '1') {
                pixel.classList.add("black");
            } else {
                pixel.classList.add("white");
            }
        }
        grid.appendChild(pixel);
        if((i + 1) % lineLength == 0) {
            let breakElement = document.createElement("div");
            breakElement.style.clear = "both";
            grid.appendChild(breakElement);
        }
    }
}
